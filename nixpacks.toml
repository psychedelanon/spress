[nixpacks]
plan = "node"

[variables]
BP_NODE_VERSION = "20"

[phases.install]
cmds = ["npm ci --no-audit --no-fund"]

[phases.build]
cmds = [
  "npm run build",
  "mkdir -p webapp/dist",
  "echo '<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>SPRESS Chess</title><script src=\"https://telegram.org/js/telegram-web-app.js\"></script><script crossorigin src=\"https://unpkg.com/react@18/umd/react.production.min.js\"></script><script crossorigin src=\"https://unpkg.com/react-dom@18/umd/react-dom.production.min.js\"></script><script src=\"https://unpkg.com/chess.js@1.4.0/chess.js\"></script><script src=\"https://unpkg.com/react-chessboard@4.7.3/dist/index.js\"></script><style>*{margin:0;padding:0;box-sizing:border-box}html,body{height:100%;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,sans-serif}body{background:#00102E;color:white;overflow:hidden}.app{height:100vh;width:100vw;display:flex;flex-direction:column;align-items:center;justify-content:center;padding:1rem}.header{font-size:2rem;font-weight:bold;color:#0053FF;margin-bottom:1rem;text-align:center}.board-container{border:4px solid #E01313;border-radius:8px;background:white;padding:8px;margin:1rem 0}.status{font-size:1.1rem;margin:1rem 0;text-align:center;color:#FFD700}.loading{font-size:1.2rem;color:#FFD700;text-align:center}@media (max-width:480px){.board-container{width:320px}}</style></head><body><div id=\"root\"><div class=\"app\"><div class=\"header\">SPRESS</div><div class=\"loading\">Loading chess game...</div><div class=\"board-container\"><div id=\"chessboard\" style=\"width:300px;height:300px;\"></div></div><div class=\"status\">Connecting to game...</div></div></div><script>const {useState,useEffect}=React;const {Chessboard}=window.ReactChessboard;function App(){const [gameState,setGameState]=useState(\"loading\");const [playerColor,setPlayerColor]=useState(\"white\");const [position,setPosition]=useState(\"start\");const [ws,setWs]=useState(null);useEffect(()=>{if(window.Telegram?.WebApp){window.Telegram.WebApp.ready();window.Telegram.WebApp.expand()}const wsProtocol=window.location.protocol===\"https:\"?\"wss:\":\"ws:\";const wsHost=window.location.hostname+(window.location.port?\":\"+window.location.port:\"\");const wsUrl=wsProtocol+\"//\"+wsHost+\"/ws?session=test&color=w\";console.log(\"Connecting to:\",wsUrl);try{const websocket=new WebSocket(wsUrl);websocket.onopen=()=>{console.log(\"WebSocket connected\");setGameState(\"connected\");setWs(websocket)};websocket.onerror=(error)=>{console.error(\"WebSocket error:\",error);setGameState(\"error\")};websocket.onclose=()=>{console.log(\"WebSocket disconnected\");setGameState(\"disconnected\")};websocket.onmessage=(event)=>{const data=JSON.parse(event.data);if(data.type===\"update\"){setPosition(data.fen);console.log(\"Updated position:\",data.fen)}}}catch(error){console.error(\"Failed to create WebSocket:\",error);setGameState(\"error\")}},[]);function onDrop(sourceSquare,targetSquare){if(!ws||gameState!==\"connected\")return false;const move={from:sourceSquare,to:targetSquare,promotion:\"q\"};ws.send(JSON.stringify({type:\"move\",move:move}));return true}return React.createElement(\"div\",{className:\"app\"},React.createElement(\"div\",{className:\"header\"},\"SPRESS\"),React.createElement(\"div\",{className:\"loading\"},gameState===\"loading\"?\"Loading chess game...\":gameState===\"connected\"?\"Game ready!\":gameState===\"error\"?\"Connection error\":\"Disconnected\"),React.createElement(\"div\",{className:\"board-container\"},React.createElement(Chessboard,{position:position,onPieceDrop:onDrop,boardWidth:300})),React.createElement(\"div\",{className:\"status\"},\"Playing as \"+playerColor))}const root=ReactDOM.createRoot(document.getElementById(\"root\"));root.render(React.createElement(App));</script></body></html>' > webapp/dist/index.html",
  "ls -la webapp/dist/"
]

[start]
cmd = "node dist/server.js" 